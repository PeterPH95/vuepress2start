import{_ as t,r as p,o,c,a as s,b as n,d as l,e as a}from"./app.cf875173.js";const r="/vuepress2start/assets/reg.86af1582.png",i={},u=a('<h1 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h1><h2 id="备忘录" tabindex="-1"><a class="header-anchor" href="#备忘录" aria-hidden="true">#</a> 备忘录</h2><p><img src="'+r+'" alt="正则备忘录"></p>',3),k={id:"一些符号代表的含义-在线",tabindex:"-1"},d=s("a",{class:"header-anchor",href:"#一些符号代表的含义-在线","aria-hidden":"true"},"#",-1),m={href:"https://regex101.com/",target:"_blank",rel:"noopener noreferrer"},g=a(`<ul><li>^： 以 ... 开头</li><li>$：以 ... 结尾</li><li>*：[0, +∞); +: [1,+∞); ?: {0,1}</li><li>\\w: 匹配字母/数字/下划线</li><li>|： 或者</li><li>()：组</li><li>[]: 集合</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// + : [1,+∞); * : [0,+∞); {m,n} : [m,n]</span>
<span class="token comment">//只能输入‘零’和‘非零开头’的数字</span>
<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^([0]|[1-9][0-9]*)$</span><span class="token regex-delimiter">/</span></span>
<span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">|</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span>$ <span class="token comment">//零 或| 头两位非零的任意位数字</span>
<span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">|</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span>$ <span class="token comment">//零 或| 非零开头的两位位数字</span>
<span class="token operator">^</span>\\<span class="token operator">+</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span>$ <span class="token comment">//非零开头的任意位正数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="千分位分隔符" tabindex="-1"><a class="header-anchor" href="#千分位分隔符" aria-hidden="true">#</a> 千分位分隔符</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ?= 正向预查，匹配之前的组；?:非捕获分组，能匹配但拿不到分组</span>
<span class="token punctuation">(</span><span class="token string">&#39;123540100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d)(?=(?:\\d{3})+$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">$1,</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token comment">// &#39;123,540,100&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function h(v,b){const e=p("ExternalLinkIcon");return o(),c("div",null,[u,s("h2",k,[d,n(" 一些符号代表的含义 "),s("a",m,[n("在线"),l(e)])]),g])}const x=t(i,[["render",h],["__file","regExp.html.vue"]]);export{x as default};
